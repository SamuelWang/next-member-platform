generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model app_logs {
  id         String    @id @default(uuid()) @db.Uuid
  user_id    String?   @db.Uuid
  level      log_level
  category   String
  message    String
  metadata   Json?
  created_at DateTime  @default(now()) @db.Timestamptz(6)
  users      users?    @relation(fields: [user_id], references: [id], onUpdate: NoAction)
}

model auth_providers {
  id                String   @id @default(uuid()) @db.Uuid
  user_id           String   @db.Uuid
  provider          String
  provider_user_id  String?
  email             String
  password_hash     String?
  is_email_verified Boolean  @default(false)
  created_at        DateTime @default(now()) @db.Timestamptz(6)
  updated_at        DateTime @default(now()) @db.Timestamptz(6)
  users             users    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([provider, provider_user_id])
}

model users {
  id             String           @id @default(uuid()) @db.Uuid
  first_name     String
  last_name      String
  email          String           @unique
  is_active      Boolean          @default(true)
  created_at     DateTime         @default(now()) @db.Timestamptz(6)
  updated_at     DateTime         @default(now()) @db.Timestamptz(6)
  role           user_role        @default(user)
  app_logs       app_logs[]
  auth_providers auth_providers[]
}

enum log_level {
  debug
  info
  warn
  error
}

enum user_role {
  user
  admin
}
